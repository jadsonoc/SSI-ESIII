<template>
    <layout-div>
      <h2 class="text-center mt-5 mb-3">Create New Recipe</h2>
      <div class="card">
          <div class="card-header">
              <router-link 
                  class="btn btn-outline-info float-right"
                  to="/">View All Recipes
              </router-link>
          </div>
          <div class="card-body">
              <form>
                  <div class="form-group">
                      <label htmlFor="name">Name</label>
                      <input 
                          v-model="recipe.name"
                          type="text"
                          class="form-control"
                          id="name"
                          name="name"/>
                  </div>
                  <div class="form-group">
                      <label htmlFor="preparation">Preparation</label>
                      <textarea 
                          v-model="recipe.preparation"
                          class="form-control"
                          id="preparation"
                          rows="6"
                          name="preparation"></textarea>
                  </div>
                  <div class="form-group">
                      <label htmlFor="time">Prep Time</label>
                      <input 
                          v-model="recipe.time"
                          type="number"
                          class="form-control"
                          id="time"
                          name="time"/>
                  </div>
                  <div class="form-group">
                      <label htmlFor="serve">Serves</label>
                      <input 
                          v-model="recipe.serve"
                          type="number"
                          class="form-control"
                          id="serve"
                          name="serve"/>
                  </div>
                  <div class="form-group">
                      <label htmlFor="difficulty">Difficulty</label>
                      <input 
                          v-model="recipe.difficulty"
                          type="number"
                          class="form-control"
                          id="difficulty"
                          name="difficulty"/>
                  </div>

                  <table>
                    <thead>
                        <tr>
                          <th>Ingredient</th>
                          <th>Quantity</th>
                        </tr>
                    </thead>
                    <tbody>
                      <tr v-for="row in rows" :key="row.index">
                        <td>
                          <input
                          v-model="" 
                          type="number"
                          class="form-control"
                          id="quantity"
                          name="quantity"/>
                        </td>
                        <td>
                          <VueMultiselect id={{row.index}}
                            v-model="selected"
                            :options="foods"
                            :searchable="searchable"
                            :close-on-select="true"
                            :clear-on-select="false"
                            :allow-empty="false"
                            label="name"
                            placeholder="Select one Ingredient"
                            track-by="id"
                          />
                        </td>
                        <td>
                          <button
                            @click="removeRow(index)">
                            Delete
                        </button>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                  <div class="pt-2">
                    <button 
                      @click="addRow()"
                      type="button">
                      Add Row
                  </button>
                  </div>

                  <button 
                      @click="handleSave()"
                      :disabled="isSaving"
                      type="button"
                      class="btn btn-outline-primary mt-3">
                      Save Recipe
                  </button>
              </form>
          </div>
      </div>
    </layout-div>
  </template>
   
  <script>
  import axios from 'axios';
  import LayoutDiv from '../components/LayoutDiv.vue';
  import Swal from 'sweetalert2'
  import { ref } from "@vue/reactivity"
  import VueMultiselect from 'vue-multiselect'

  export default {
    name: 'RecipeCreate',
    components: {
      LayoutDiv,
      VueMultiselect
    },
    data() {
      return {
        recipe: {
          name: '',
          preparation: '',
          time: '',
          serve: '',
          difficulty: '',
          ingredients: []
        },
        selected: [],
        foods: [],
        isSaving: false,
      };
    },
    mounted() {
      axios.get("/foods").then(response => {
        this.foods = response.data
      })
    },
    methods: {
      handleSave() {
        this.isSaving = true
        axios.post('/recipes', this.recipe)
          .then(response => {
            Swal.fire({
              icon: 'success',
              title: 'Recipe saved successfully!',
              showConfirmButton: false,
              timer: 1500
            })
            this.isSaving = false
            this.recipe.name = ""
            this.recipe.preparation = ""
            this.recipe.time = ""
            this.recipe.serve = ""
            this.recipe.difficulty = ""
            return response
          })
          .catch(error => {
            this.isSaving = false
            Swal.fire({
              icon: 'error',
              title: 'An Error Occured!',
              showConfirmButton: false,
              timer: 1500
            })
            return error
          });
      },
    },
    setup() {
        const rows = ref([]);
        const addRow = () => {
          rows.value.push([{
            "ingredient": "",
            "quantity": "",
          }]);
          console.log(rows.value);
        };
        const removeRow = (index) => {
          rows.value.splice(index,1)
        }; 
        const foodSelected = ref({});
      return {
        rows,
        addRow,
        removeRow,
        foodSelected
      }  
    },
  };
  </script>

<style src="vue-multiselect/dist/vue-multiselect.css"></style>