{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport LayoutDiv from '../components/LayoutDiv.vue';\nimport Swal from 'sweetalert2';\nimport { ref } from \"@vue/reactivity\";\nimport VueMultiselect from 'vue-multiselect';\nexport default {\n  name: 'RecipeCreate',\n  components: {\n    LayoutDiv,\n    VueMultiselect\n  },\n  data() {\n    return {\n      recipe: {\n        name: '',\n        preparation: '',\n        time: '',\n        serve: '',\n        difficulty: '',\n        ingredients: []\n      },\n      selected: [],\n      foods: [{\n        foodUnit: '',\n        name: ''\n      }],\n      isSaving: false\n    };\n  },\n  mounted() {\n    axios.get(\"/foods\").then(response => {\n      this.foods = response.data;\n    });\n  },\n  methods: {\n    foodlWithUnit({\n      foodUnit,\n      name\n    }) {\n      return '${foodUnit} — [${name}]';\n    },\n    handleSave() {\n      this.isSaving = true;\n      axios.post('/recipes', this.recipe).then(response => {\n        Swal.fire({\n          icon: 'success',\n          title: 'Recipe saved successfully!',\n          showConfirmButton: false,\n          timer: 1500\n        });\n        this.isSaving = false;\n        this.recipe.name = \"\";\n        this.recipe.preparation = \"\";\n        this.recipe.time = \"\";\n        this.recipe.serve = \"\";\n        this.recipe.difficulty = \"\";\n        return response;\n      }).catch(error => {\n        this.isSaving = false;\n        Swal.fire({\n          icon: 'error',\n          title: 'An Error Occured!',\n          showConfirmButton: false,\n          timer: 1500\n        });\n        return error;\n      });\n    }\n  },\n  setup() {\n    const rows = ref([]);\n    const addRow = () => {\n      rows.value.push([{\n        \"ingredient\": \"\",\n        \"quantity\": \"\"\n      }]);\n      console.log(rows.value);\n    };\n    const removeRow = index => {\n      rows.value.splice(index, 1);\n    };\n    const foodSelected = ref({});\n    return {\n      rows,\n      addRow,\n      removeRow,\n      foodSelected\n    };\n  }\n};","map":{"version":3,"names":["axios","LayoutDiv","Swal","ref","VueMultiselect","name","components","data","recipe","preparation","time","serve","difficulty","ingredients","selected","foods","foodUnit","isSaving","mounted","get","then","response","methods","foodlWithUnit","handleSave","post","fire","icon","title","showConfirmButton","timer","catch","error","setup","rows","addRow","value","push","console","log","removeRow","index","splice","foodSelected"],"sources":["/Volumes/SDDisk2/workspace/IFRS/ES3/SSI-ESIII/cookit/src/main/webapp/src/views/RecipeCreate.vue"],"sourcesContent":["<template>\n    <layout-div>\n      <h2 class=\"text-center mt-5 mb-3\">Create New Recipe</h2>\n      <div class=\"card\">\n          <div class=\"card-header\">\n              <router-link \n                  class=\"btn btn-outline-info float-right\"\n                  to=\"/\">View All Recipes\n              </router-link>\n          </div>\n          <div class=\"card-body\">\n              <form>\n                  <div class=\"form-group\">\n                      <label htmlFor=\"name\">Name</label>\n                      <input \n                          v-model=\"recipe.name\"\n                          type=\"text\"\n                          class=\"form-control\"\n                          id=\"name\"\n                          name=\"name\"/>\n                  </div>\n                  <div class=\"form-group\">\n                      <label htmlFor=\"preparation\">Preparation</label>\n                      <textarea \n                          v-model=\"recipe.preparation\"\n                          class=\"form-control\"\n                          id=\"preparation\"\n                          rows=\"6\"\n                          name=\"preparation\"></textarea>\n                  </div>\n                  <div class=\"form-group\">\n                      <label htmlFor=\"time\">Prep Time</label>\n                      <input \n                          v-model=\"recipe.time\"\n                          type=\"number\"\n                          class=\"form-control\"\n                          id=\"time\"\n                          name=\"time\"/>\n                  </div>\n                  <div class=\"form-group\">\n                      <label htmlFor=\"serve\">Serves</label>\n                      <input \n                          v-model=\"recipe.serve\"\n                          type=\"number\"\n                          class=\"form-control\"\n                          id=\"serve\"\n                          name=\"serve\"/>\n                  </div>\n                  <div class=\"form-group\">\n                      <label htmlFor=\"difficulty\">Difficulty</label>\n                      <input \n                          v-model=\"recipe.difficulty\"\n                          type=\"number\"\n                          class=\"form-control\"\n                          id=\"difficulty\"\n                          name=\"difficulty\"/>\n                  </div>\n\n                  <table>\n                    <thead>\n                        <tr>\n                          <th>Ingredient</th>\n                          <th>Quantity</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                      <tr v-for=\"row in rows\" :key=\"row.index\">\n                        <td>\n                          <input \n                          type=\"number\"\n                          class=\"form-control\"\n                          id=\"quantity\"\n                          name=\"quantity\"/>\n                        </td>\n                        <td>\n                          <VueMultiselect id=\"row.index\"\n                            v-model=\"selected\"\n                            :options=\"foods\"\n                            :close-on-select=\"true\"\n                            :clear-on-select=\"false\"\n                            :allow-empty=\"false\"\n                            :custom-label=\"foodlWithUnit\"\n                            placeholder=\"Select one Ingredient\"\n                            track-by=\"id\"\n                            @update:model-value=\"updateSelected(selected.id)\"\n                          />\n                        </td>\n                        <td>\n                          <button\n                            @click=\"removeRow(index)\">\n                            Delete\n                        </button>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                  <div class=\"pt-2\">\n                    <button \n                      @click=\"addRow()\"\n                      type=\"button\">\n                      Add Row\n                  </button>\n                  </div>\n\n                  <button \n                      @click=\"handleSave()\"\n                      :disabled=\"isSaving\"\n                      type=\"button\"\n                      class=\"btn btn-outline-primary mt-3\">\n                      Save Recipe\n                  </button>\n              </form>\n          </div>\n      </div>\n    </layout-div>\n  </template>\n   \n  <script>\n  import axios from 'axios';\n  import LayoutDiv from '../components/LayoutDiv.vue';\n  import Swal from 'sweetalert2'\n  import { ref } from \"@vue/reactivity\"\n  import VueMultiselect from 'vue-multiselect'\n\n  export default {\n    name: 'RecipeCreate',\n    components: {\n      LayoutDiv,\n      VueMultiselect\n    },\n    data() {\n      return {\n        recipe: {\n          name: '',\n          preparation: '',\n          time: '',\n          serve: '',\n          difficulty: '',\n          ingredients: []\n        },\n        selected: [],\n        foods: [{ foodUnit: '', name: '' }],\n        isSaving:false,\n      };\n    },\n    mounted() {\n      axios.get(\"/foods\").then(response => {\n        this.foods = response.data\n      })\n    },\n    methods: {\n      foodlWithUnit({ foodUnit, name }) {\n        return '${foodUnit} — [${name}]';\n      },\n      handleSave() {\n          this.isSaving = true\n          axios.post('/recipes', this.recipe)\n            .then(response => {\n              Swal.fire({\n                  icon: 'success',\n                  title: 'Recipe saved successfully!',\n                  showConfirmButton: false,\n                  timer: 1500\n              })\n              this.isSaving = false\n              this.recipe.name = \"\"\n              this.recipe.preparation = \"\"\n              this.recipe.time = \"\"\n              this.recipe.serve = \"\"\n              this.recipe.difficulty = \"\"\n              return response\n            })\n            .catch(error => {\n              this.isSaving = false\n              Swal.fire({\n                  icon: 'error',\n                  title: 'An Error Occured!',\n                  showConfirmButton: false,\n                  timer: 1500\n              })\n              return error\n            });\n      },\n    },\n    setup() {\n        const rows = ref([]);\n        const addRow = () => {\n          rows.value.push([{\n            \"ingredient\": \"\",\n            \"quantity\": \"\",\n          }]);\n          console.log(rows.value);\n        };\n        const removeRow = (index) => {\n          rows.value.splice(index,1)\n        }; \n        const foodSelected = ref({});\n      return {\n        rows,\n        addRow,\n        removeRow,\n        foodSelected\n      }  \n    },\n  };\n  </script>\n\n<style src=\"vue-multiselect/dist/vue-multiselect.css\"></style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}