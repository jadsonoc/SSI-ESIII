{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport VueCookies from 'vue-cookies';\nimport axios from \"axios\";\nimport LayoutDiv from \"./LayoutDiv.vue\";\nimport Swal from \"sweetalert2\";\nexport default {\n  name: \"RecipeSearchList\",\n  components: {\n    LayoutDiv\n  },\n  data() {\n    return {\n      ingredients: [],\n      recipes: [],\n      isLogged: false,\n      intolerancies: []\n    };\n  },\n  created() {\n    if (VueCookies.isKey('userId')) {\n      this.isLogged = true;\n      this.intolerancies.push(VueCookies.get('userLactoseIntolerant'));\n      this.intolerancies.push(VueCookies.get('userGlutenIntolerant'));\n      this.intolerancies.push(VueCookies.get('userOilseedsIntolerant'));\n      console.log(this.intolerancies);\n    }\n    const param = JSON.parse(this.$route.params.query);\n    param.forEach(ingredient => {\n      this.ingredients.push(ingredient);\n    });\n    axios.post(\"/recipes/mainSearchByFoodsLogged\", this.ingredients, this.intolerancies).then(response => {\n      if (response.data.length === 0) {\n        Swal.fire({\n          icon: \"warning\",\n          title: \"Ops! Unfortunatelly, we don't have any recipe with those ingredients in our database\",\n          showConfirmButton: false,\n          timer: 5500\n        });\n      } else {\n        let recipesInfo = response.data;\n        recipesInfo.forEach(recipe => {\n          if (recipesInfo.ingredients.some(ingredient => {\n            if (ingredient.food.lactoseFree && intolerancies.get(0)) {\n              return false;\n            }\n          })) {\n            this.recipes.push(recipe);\n          }\n        });\n        /*\n        if (recipe.getIngredients().stream().anyMatch(ingredient -> {\n            if (!ingredient.getFood().isLactoseFree() && intolerances.get(0)) {\n                return false;\n            } else if (!ingredient.getFood().isGlutenFree() && intolerances.get(1)) {\n                return false;\n            } else if (!ingredient.getFood().isOilseedFree() && intolerances.get(2)) {\n                return false;\n            } else {\n                return true;\n            }\n        })) {\n            responseRecipes.add(recipe);\n        }\n        });\n        */\n        /*\n        recipesInfo.forEach((element) => {\n          this.recipes.push(element);\n        });\n        */\n      }\n\n      console.log(this.intolerancies);\n      console.log(this.recipes);\n      return response;\n    }).catch(error => {\n      Swal.fire({\n        icon: \"error\",\n        //title: 'An Error Occured!',\n        title: error,\n        showConfirmButton: false,\n        timer: 1500\n      });\n      return error;\n    });\n  }\n};","map":{"version":3,"names":["VueCookies","axios","LayoutDiv","Swal","name","components","data","ingredients","recipes","isLogged","intolerancies","created","isKey","push","get","console","log","param","JSON","parse","$route","params","query","forEach","ingredient","post","then","response","length","fire","icon","title","showConfirmButton","timer","recipesInfo","recipe","some","food","lactoseFree","catch","error"],"sources":["/Volumes/SDDisk2/workspace/IFRS/ES3/SSI-ESIII/cookit/src/main/webapp/src/components/RecipeSearchList.vue"],"sourcesContent":["<template>\n  <layout-div>\n    <div class=\"container\">\n      <h2 class=\"text-center mt-5 mb-3\">Recipe Suggestions</h2>\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <router-link to=\"/\" class=\"btn btn-outline-primary\"\n            >Go back to Home\n          </router-link>\n        </div>\n        <div class=\"card-body\">\n          <table class=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Preparation</th>\n                <th>Time</th>\n                <th>Serve</th>\n                <th>Difficulty</th>\n                <th width=\"240px\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"recipe in recipes\" :key=\"recipe.id\">\n                <td>{{ recipe.name }}</td>\n                <td>{{ recipe.preparation }}</td>\n                <td>{{ recipe.time }}</td>\n                <td>{{ recipe.serve }}</td>\n                <td>{{ recipe.difficulty }}</td>\n                <td>\n                  <router-link\n                    :to=\"`/recipe/show/${recipe.id}`\"\n                    class=\"btn btn-outline-info mx-1\"\n                    >Show</router-link\n                  >\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </layout-div>\n</template>\n\n<script>\nimport VueCookies from 'vue-cookies';\nimport axios from \"axios\";\nimport LayoutDiv from \"./LayoutDiv.vue\";\nimport Swal from \"sweetalert2\";\n\nexport default {\n  name: \"RecipeSearchList\",\n  components: {\n    LayoutDiv,\n  },\n  data() {\n    return {\n      ingredients: [],\n      recipes: [],\n      isLogged: false,\n      intolerancies: [],\n    };\n  },\n  created() {\n    if (VueCookies.isKey('userId')) {\n      this.isLogged = true;\n      this.intolerancies.push(VueCookies.get('userLactoseIntolerant'));\n      this.intolerancies.push(VueCookies.get('userGlutenIntolerant'));\n      this.intolerancies.push(VueCookies.get('userOilseedsIntolerant'));\n      console.log(this.intolerancies)\n    }\n    const param = JSON.parse(this.$route.params.query);\n    param.forEach((ingredient) => {\n      this.ingredients.push(ingredient);\n    });\n    axios\n      .post(\"/recipes/mainSearchByFoodsLogged\", this.ingredients, this.intolerancies)\n      .then((response) => {\n        if (response.data.length === 0) {\n          Swal.fire({\n            icon: \"warning\",\n            title:\n              \"Ops! Unfortunatelly, we don't have any recipe with those ingredients in our database\",\n            showConfirmButton: false,\n            timer: 5500,\n          });\n        } else {\n          let recipesInfo = response.data;\n          recipesInfo.forEach(recipe => {\n            if (recipesInfo.ingredients.some(ingredient => {\n              if (ingredient.food.lactoseFree && intolerancies.get(0)) {\n                return false;\n              }\n\n            })\n            ) {\n              this.recipes.push(recipe);\n            }\n            })\n            /*\n            if (recipe.getIngredients().stream().anyMatch(ingredient -> {\n                if (!ingredient.getFood().isLactoseFree() && intolerances.get(0)) {\n                    return false;\n                } else if (!ingredient.getFood().isGlutenFree() && intolerances.get(1)) {\n                    return false;\n                } else if (!ingredient.getFood().isOilseedFree() && intolerances.get(2)) {\n                    return false;\n                } else {\n                    return true;\n                }\n            })) {\n                responseRecipes.add(recipe);\n            }\n        });\n*/\n          /*\n          recipesInfo.forEach((element) => {\n            this.recipes.push(element);\n          });\n          */\n        }\n        console.log(this.intolerancies)\n        console.log(this.recipes)\n        return response;\n      })\n      .catch((error) => {\n        Swal.fire({\n          icon: \"error\",\n          //title: 'An Error Occured!',\n          title: error,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n        return error;\n      });\n  },\n};\n</script>\n"],"mappings":";AA8CA,OAAOA,UAAS,MAAO,aAAa;AACpC,OAAOC,KAAI,MAAO,OAAO;AACzB,OAAOC,SAAQ,MAAO,iBAAiB;AACvC,OAAOC,IAAG,MAAO,aAAa;AAE9B,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,KAAK;MACfC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAIX,UAAU,CAACY,KAAK,CAAC,QAAQ,CAAC,EAAE;MAC9B,IAAI,CAACH,QAAO,GAAI,IAAI;MACpB,IAAI,CAACC,aAAa,CAACG,IAAI,CAACb,UAAU,CAACc,GAAG,CAAC,uBAAuB,CAAC,CAAC;MAChE,IAAI,CAACJ,aAAa,CAACG,IAAI,CAACb,UAAU,CAACc,GAAG,CAAC,sBAAsB,CAAC,CAAC;MAC/D,IAAI,CAACJ,aAAa,CAACG,IAAI,CAACb,UAAU,CAACc,GAAG,CAAC,wBAAwB,CAAC,CAAC;MACjEC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,aAAa;IAChC;IACA,MAAMO,KAAI,GAAIC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,KAAK,CAAC;IAClDL,KAAK,CAACM,OAAO,CAAEC,UAAU,IAAK;MAC5B,IAAI,CAACjB,WAAW,CAACM,IAAI,CAACW,UAAU,CAAC;IACnC,CAAC,CAAC;IACFvB,KAAI,CACDwB,IAAI,CAAC,kCAAkC,EAAE,IAAI,CAAClB,WAAW,EAAE,IAAI,CAACG,aAAa,EAC7EgB,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACrB,IAAI,CAACsB,MAAK,KAAM,CAAC,EAAE;QAC9BzB,IAAI,CAAC0B,IAAI,CAAC;UACRC,IAAI,EAAE,SAAS;UACfC,KAAK,EACH,sFAAsF;UACxFC,iBAAiB,EAAE,KAAK;UACxBC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ,OAAO;QACL,IAAIC,WAAU,GAAIP,QAAQ,CAACrB,IAAI;QAC/B4B,WAAW,CAACX,OAAO,CAACY,MAAK,IAAK;UAC5B,IAAID,WAAW,CAAC3B,WAAW,CAAC6B,IAAI,CAACZ,UAAS,IAAK;YAC7C,IAAIA,UAAU,CAACa,IAAI,CAACC,WAAU,IAAK5B,aAAa,CAACI,GAAG,CAAC,CAAC,CAAC,EAAE;cACvD,OAAO,KAAK;YACd;UAEF,CAAC,GACC;YACA,IAAI,CAACN,OAAO,CAACK,IAAI,CAACsB,MAAM,CAAC;UAC3B;QACA,CAAC;QACD;;;;;;;;;;;;;;;AAeZ;QACU;;;;;MAKF;;MACApB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,aAAa;MAC9BK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,OAAO;MACxB,OAAOmB,QAAQ;IACjB,CAAC,EACAY,KAAK,CAAEC,KAAK,IAAK;MAChBrC,IAAI,CAAC0B,IAAI,CAAC;QACRC,IAAI,EAAE,OAAO;QACb;QACAC,KAAK,EAAES,KAAK;QACZR,iBAAiB,EAAE,KAAK;QACxBC,KAAK,EAAE;MACT,CAAC,CAAC;MACF,OAAOO,KAAK;IACd,CAAC,CAAC;EACN;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}