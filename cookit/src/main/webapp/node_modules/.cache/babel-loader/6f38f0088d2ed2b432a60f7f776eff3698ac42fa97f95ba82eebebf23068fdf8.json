{"ast":null,"code":"import { googleAuthCodeLogin } from \"vue3-google-login\";\nimport axios from \"axios\";\n//import Swal from \"sweetalert2\";\n\nexport default {\n  name: \"NavMenu\",\n  data() {\n    return {\n      user: [],\n      userGoogleData: []\n    };\n  },\n  setup() {},\n  methods: {\n    callback(response) {\n      // This callback will be triggered when the user selects or login to\n      // his Google account from the popup\n      console.log(\"Handle the response\", response);\n      const userData = decodeCredential(response.credential);\n      console.log(userData);\n    },\n    login() {\n      googleAuthCodeLogin().then(response => {\n        console.log(\"Handle the response\", response);\n      });\n    },\n    getUserInfoFromGoogle(token) {\n      axios.get(`https://www.googleapis.com/oauth2/v1/userinfo?alt=json&access_token=${token}`).then(response => {\n        this.userGoogleData = response.data;\n        return response;\n      }).catch(error => {\n        return error;\n      });\n    },\n    userLogin(email) {\n      axios.post(\"/userManager/login\", email).then(response => {\n        this.user = response.data;\n        console.log(this.user);\n        return response;\n      }).catch(error => {\n        return error;\n      });\n    }\n  }\n};","map":{"version":3,"names":["googleAuthCodeLogin","axios","name","data","user","userGoogleData","setup","methods","callback","response","console","log","userData","decodeCredential","credential","login","then","getUserInfoFromGoogle","token","get","catch","error","userLogin","email","post"],"sources":["/Volumes/SDDisk2/workspace/IFRS/ES3/SSI-ESIII/cookit/src/main/webapp/src/components/NavMenu.vue"],"sourcesContent":["<template>\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" href=\"#\">\n      <img src=\"../assets/img/logo2_mini.png\" alt=\"\" width=\"90\" height=\"30\" />\n    </a>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarNavAltMarkup\"\n      aria-controls=\"navbarNavAltMarkup\"\n      aria-expanded=\"false\"\n      aria-label=\"Alterna navegação\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div\n      class=\"collapse navbar-collapse d-flex flex-row-reverse\"\n      id=\"navbarNavAltMarkup\"\n    >\n      <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link active\" href=\"/\"\n          >Home <span class=\"sr-only\">(Página atual)</span></a\n        >\n        <a class=\"nav-item nav-link\" href=\"/recipe/list\">Receitas</a>\n        <a class=\"nav-item nav-link\" href=\"/food/list\">Ingredientes</a>\n      \n        <button @click=\"login\">Login Using Google</button>\n\n        <a class=\"nav-item nav-link disabled\" href=\"#\">Log In</a>\n      </div>\n    </div>\n  </nav>\n</template>\n\n\n<script>\nimport { googleAuthCodeLogin } from \"vue3-google-login\"\nimport axios from \"axios\";\n//import Swal from \"sweetalert2\";\n\nexport default {\n  name: \"NavMenu\",\n  data() {\n    return {\n      user: [],\n      userGoogleData: [],\n    }\n  },\n  setup() {\n    \n  },\n  methods: {\n    callback(response) {\n    // This callback will be triggered when the user selects or login to\n    // his Google account from the popup\n      console.log(\"Handle the response\", response)\n      const userData = decodeCredential(response.credential)\n      console.log(userData)\n    \n\n    },\n    login() {\n      googleAuthCodeLogin().then((response) => {\n        console.log(\"Handle the response\", response)\n      })\n    },\n    getUserInfoFromGoogle(token) {\n      axios\n        .get( `https://www.googleapis.com/oauth2/v1/userinfo?alt=json&access_token=${token}`)\n        .then((response) => {\n          this.userGoogleData = response.data;\n          return response;\n        })\n        .catch((error) => {\n          return error;\n        });\n    },\n    userLogin(email) {\n      axios\n        .post(\"/userManager/login\", email)\n        .then((response) => {\n          this.user = response.data;\n          console.log(this.user)\n          return response;\n        })\n        .catch((error) => {\n          return error;\n        });\n    },\n  }\n};\n</script>\n"],"mappings":"AAqCA,SAASA,mBAAkB,QAAS,mBAAkB;AACtD,OAAOC,KAAI,MAAO,OAAO;AACzB;;AAEA,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,cAAc,EAAE;IAClB;EACF,CAAC;EACDC,KAAKA,CAAA,EAAG,CAER,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQA,CAACC,QAAQ,EAAE;MACnB;MACA;MACEC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,QAAQ;MAC3C,MAAMG,QAAO,GAAIC,gBAAgB,CAACJ,QAAQ,CAACK,UAAU;MACrDJ,OAAO,CAACC,GAAG,CAACC,QAAQ;IAGtB,CAAC;IACDG,KAAKA,CAAA,EAAG;MACNf,mBAAmB,CAAC,CAAC,CAACgB,IAAI,CAAEP,QAAQ,IAAK;QACvCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,QAAQ;MAC7C,CAAC;IACH,CAAC;IACDQ,qBAAqBA,CAACC,KAAK,EAAE;MAC3BjB,KAAI,CACDkB,GAAG,CAAG,uEAAsED,KAAM,EAAC,EACnFF,IAAI,CAAEP,QAAQ,IAAK;QAClB,IAAI,CAACJ,cAAa,GAAII,QAAQ,CAACN,IAAI;QACnC,OAAOM,QAAQ;MACjB,CAAC,EACAW,KAAK,CAAEC,KAAK,IAAK;QAChB,OAAOA,KAAK;MACd,CAAC,CAAC;IACN,CAAC;IACDC,SAASA,CAACC,KAAK,EAAE;MACftB,KAAI,CACDuB,IAAI,CAAC,oBAAoB,EAAED,KAAK,EAChCP,IAAI,CAAEP,QAAQ,IAAK;QAClB,IAAI,CAACL,IAAG,GAAIK,QAAQ,CAACN,IAAI;QACzBO,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,IAAI;QACrB,OAAOK,QAAQ;MACjB,CAAC,EACAW,KAAK,CAAEC,KAAK,IAAK;QAChB,OAAOA,KAAK;MACd,CAAC,CAAC;IACN;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}