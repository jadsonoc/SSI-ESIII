{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport NavMenu from \"../components/NavMenu.vue\";\nimport LayoutDiv from \"../components/LayoutDiv.vue\";\nimport Swal from \"sweetalert2\";\nexport default {\n  name: \"FoodCreate\",\n  components: {\n    NavMenu,\n    LayoutDiv\n  },\n  data() {\n    return {\n      food: {\n        name: \"\",\n        lactoseFree: \"\",\n        glutenFree: \"\",\n        oilseedFree: \"\",\n        foodUnit: \"\"\n      },\n      unities: [\"g\", \"Kg\", \"ml\", \"L\", \"un\", \"tbs\", \"fatia\"],\n      isSaving: false\n    };\n  },\n  methods: {\n    updateInput(event) {\n      let isChecked = event.target.checked;\n      if (this.modelValue instanceof Array) {\n        let newValue = [...this.modelValue];\n        if (isChecked) {\n          newValue.push(this.value);\n        } else {\n          newValue.splice(newValue.indexOf(this.value), 1);\n        }\n        this.$emit(\"change\", newValue);\n      } else {\n        this.$emit(\"change\", isChecked ? this.trueValue : this.falseValue);\n      }\n    },\n    handleSave() {\n      this.isSaving = true;\n      axios.post(\"/foods\", this.recipe).then(response => {\n        Swal.fire({\n          icon: \"success\",\n          title: \"Recipe saved successfully!\",\n          showConfirmButton: false,\n          timer: 1500\n        });\n        //this.isSaving = false\n        //this.recipe.id = response.data.id;\n        this.recipe.name = \"\";\n        this.recipe.preparation = \"\";\n        this.recipe.time = \"\";\n        this.recipe.serve = \"\";\n        this.recipe.difficulty = \"\";\n        this.recipe.ingredients = [];\n        return response;\n      }).catch(error => {\n        this.isSaving = false;\n        Swal.fire({\n          icon: \"error\",\n          title: \"An Error Occured!\",\n          showConfirmButton: false,\n          timer: 1500\n        });\n        return error;\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","NavMenu","LayoutDiv","Swal","name","components","data","food","lactoseFree","glutenFree","oilseedFree","foodUnit","unities","isSaving","methods","updateInput","event","isChecked","target","checked","modelValue","Array","newValue","push","value","splice","indexOf","$emit","trueValue","falseValue","handleSave","post","recipe","then","response","fire","icon","title","showConfirmButton","timer","preparation","time","serve","difficulty","ingredients","catch","error"],"sources":["/Volumes/SDDisk2/workspace/IFRS/ES3/SSI-ESIII/cookit/src/main/webapp/src/views/FoodCreate.vue"],"sourcesContent":["<template>\n  <NavMenu />\n  <layout-div>\n    <h2 class=\"text-center mt-5 mb-3\">Insert New Food</h2>\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <router-link class=\"btn btn-outline-info float-right\" to=\"/recipe/list\"\n          >View All Ingredients\n        </router-link>\n      </div>\n      <div class=\"card-body\">\n        <form>\n          <div class=\"form-group py-2\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              v-model=\"food.name\"\n              type=\"text\"\n              class=\"form-control\"\n              id=\"name\"\n              name=\"name\"\n            />\n          </div>\n          <div class=\"form-group py-2\">\n            <label htmlFor=\"foodUnit\">Unit</label>\n            <select\n              v-model=\"food.foodUnit\"\n              type=\"text\"\n              :name=\"foodUnit\"\n              class=\"form-control\"\n            >\n              <option disabled value=\"\">\n                Please select one Ingredient Unit\n              </option>\n              <option v-for=\"(unit, index) in unities\" :key=\"index\">\n                {{ unit }}\n              </option>\n            </select>\n          </div>\n          <div class=\"form-group py-2\">\n            <label htmlFor=\"lactoseFree\">Lactose Free?</label>\n            <label class=\"wrapper flex items-center\">\n              <input\n                class=\"form-control checkbox\"\n                type=\"checkbox\"\n                :checked=\"food.lactoseFree\"\n                :value=\"food.lactoseFree\"\n                @change=\"updateInput\"\n              />\n              <span class=\"checkmark\"></span>\n            </label>\n          </div>\n          <div class=\"form-group py-2\">\n            <label htmlFor=\"glutenFree\">Gluten Free?&nbsp;&nbsp;&nbsp;</label>\n            <label class=\"wrapper flex items-center\">\n              <input\n                class=\"form-control checkbox\"\n                type=\"checkbox\"\n                :checked=\"food.glutenFree\"\n                :value=\"food.glutenFree\"\n                @change=\"updateInput\"\n              />\n              <span class=\"checkmark\"></span>\n            </label>\n          </div>\n          <div class=\"form-group py-2\">\n            <label htmlFor=\"lactoseFree\">Oilseed Free?&nbsp;</label>\n            <label class=\"wrapper flex items-center\">\n              <input\n                class=\"form-control checkbox\"\n                type=\"checkbox\"\n                :checked=\"food.oilseedFree\"\n                :value=\"food.oilSeedFree\"\n                @change=\"updateInput\"\n              />\n              <span class=\"checkmark\"></span>\n            </label>\n          </div>\n\n          <button\n            @click=\"handleSave()\"\n            :disabled=\"isSaving\"\n            type=\"button\"\n            class=\"btn btn-outline-primary mt-3\"\n          >\n            Save Ingredient\n          </button>\n        </form>\n      </div>\n    </div>\n  </layout-div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport NavMenu from \"../components/NavMenu.vue\";\nimport LayoutDiv from \"../components/LayoutDiv.vue\";\nimport Swal from \"sweetalert2\";\n\nexport default {\n  name: \"FoodCreate\",\n  components: {\n    NavMenu,\n    LayoutDiv,\n  },\n  data() {\n    return {\n      food: {\n        name: \"\",\n        lactoseFree: \"\",\n        glutenFree: \"\",\n        oilseedFree: \"\",\n        foodUnit: \"\",\n      },\n      unities: [\"g\", \"Kg\", \"ml\", \"L\", \"un\", \"tbs\", \"fatia\"],\n      isSaving: false,\n    };\n  },\n  methods: {\n    updateInput(event) {\n      let isChecked = event.target.checked;\n      if (this.modelValue instanceof Array) {\n        let newValue = [...this.modelValue];\n        if (isChecked) {\n          newValue.push(this.value);\n        } else {\n          newValue.splice(newValue.indexOf(this.value), 1);\n        }\n        this.$emit(\"change\", newValue);\n      } else {\n        this.$emit(\"change\", isChecked ? this.trueValue : this.falseValue);\n      }\n    },\n    handleSave() {\n      this.isSaving = true;\n      axios\n        .post(\"/foods\", this.recipe)\n        .then((response) => {\n          Swal.fire({\n            icon: \"success\",\n            title: \"Recipe saved successfully!\",\n            showConfirmButton: false,\n            timer: 1500,\n          });\n          //this.isSaving = false\n          //this.recipe.id = response.data.id;\n          this.recipe.name = \"\";\n          this.recipe.preparation = \"\";\n          this.recipe.time = \"\";\n          this.recipe.serve = \"\";\n          this.recipe.difficulty = \"\";\n          this.recipe.ingredients = [];\n          return response;\n        })\n        .catch((error) => {\n          this.isSaving = false;\n          Swal.fire({\n            icon: \"error\",\n            title: \"An Error Occured!\",\n            showConfirmButton: false,\n            timer: 1500,\n          });\n          return error;\n        });\n    },\n  },\n};\n</script>\n\n<style lang=\"postcss\" scoped>\n/* Customize the label (the wrapper) */\n.wrapper {\n  display: inline-block;\n  position: relative;\n  margin-left: 30px;\n  margin-bottom: 14px;\n  cursor: pointer;\n  font-size: 22px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  font-size: 16px;\n}\n/* Hide the browser's default checkbox */\n.wrapper input {\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n}\n/* Create a custom checkbox */\n.checkmark {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 21px;\n  width: 21px;\n  border-radius: 2px;\n  background-color: #eee;\n  border: 1px solid #ccc;\n}\n/* On mouse-over, add a grey background color */\n.wrapper:hover input ~ .checkmark {\n  background-color: #ccc;\n}\n/* When the checkbox is checked, add a blue background */\n.wrapper input:checked ~ .checkmark {\n  background-color: #1cd4a7;\n}\n/* Create the checkmark/indicator (hidden when not checked) */\n.checkmark:after {\n  content: \"\";\n  position: absolute;\n  display: none;\n}\n/* Show the checkmark when checked */\n.wrapper input:checked ~ .checkmark:after {\n  display: block;\n}\n/* Style the checkmark/indicator */\n.wrapper .checkmark:after {\n  left: 7px;\n  top: 0px;\n  width: 7px;\n  height: 15px;\n  border: solid white;\n  border-width: 0 3px 3px 0;\n  -webkit-transform: rotate(45deg);\n  -ms-transform: rotate(45deg);\n  transform: rotate(45deg);\n}\n</style>\n"],"mappings":";AA6FA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,OAAM,MAAO,2BAA2B;AAC/C,OAAOC,SAAQ,MAAO,6BAA6B;AACnD,OAAOC,IAAG,MAAO,aAAa;AAE9B,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IACVJ,OAAO;IACPC;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJH,IAAI,EAAE,EAAE;QACRI,WAAW,EAAE,EAAE;QACfC,UAAU,EAAE,EAAE;QACdC,WAAW,EAAE,EAAE;QACfC,QAAQ,EAAE;MACZ,CAAC;MACDC,OAAO,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC;MACrDC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAACC,KAAK,EAAE;MACjB,IAAIC,SAAQ,GAAID,KAAK,CAACE,MAAM,CAACC,OAAO;MACpC,IAAI,IAAI,CAACC,UAAS,YAAaC,KAAK,EAAE;QACpC,IAAIC,QAAO,GAAI,CAAC,GAAG,IAAI,CAACF,UAAU,CAAC;QACnC,IAAIH,SAAS,EAAE;UACbK,QAAQ,CAACC,IAAI,CAAC,IAAI,CAACC,KAAK,CAAC;QAC3B,OAAO;UACLF,QAAQ,CAACG,MAAM,CAACH,QAAQ,CAACI,OAAO,CAAC,IAAI,CAACF,KAAK,CAAC,EAAE,CAAC,CAAC;QAClD;QACA,IAAI,CAACG,KAAK,CAAC,QAAQ,EAAEL,QAAQ,CAAC;MAChC,OAAO;QACL,IAAI,CAACK,KAAK,CAAC,QAAQ,EAAEV,SAAQ,GAAI,IAAI,CAACW,SAAQ,GAAI,IAAI,CAACC,UAAU,CAAC;MACpE;IACF,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACjB,QAAO,GAAI,IAAI;MACpBb,KAAI,CACD+B,IAAI,CAAC,QAAQ,EAAE,IAAI,CAACC,MAAM,EAC1BC,IAAI,CAAEC,QAAQ,IAAK;QAClB/B,IAAI,CAACgC,IAAI,CAAC;UACRC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAE,4BAA4B;UACnCC,iBAAiB,EAAE,KAAK;UACxBC,KAAK,EAAE;QACT,CAAC,CAAC;QACF;QACA;QACA,IAAI,CAACP,MAAM,CAAC5B,IAAG,GAAI,EAAE;QACrB,IAAI,CAAC4B,MAAM,CAACQ,WAAU,GAAI,EAAE;QAC5B,IAAI,CAACR,MAAM,CAACS,IAAG,GAAI,EAAE;QACrB,IAAI,CAACT,MAAM,CAACU,KAAI,GAAI,EAAE;QACtB,IAAI,CAACV,MAAM,CAACW,UAAS,GAAI,EAAE;QAC3B,IAAI,CAACX,MAAM,CAACY,WAAU,GAAI,EAAE;QAC5B,OAAOV,QAAQ;MACjB,CAAC,EACAW,KAAK,CAAEC,KAAK,IAAK;QAChB,IAAI,CAACjC,QAAO,GAAI,KAAK;QACrBV,IAAI,CAACgC,IAAI,CAAC;UACRC,IAAI,EAAE,OAAO;UACbC,KAAK,EAAE,mBAAmB;UAC1BC,iBAAiB,EAAE,KAAK;UACxBC,KAAK,EAAE;QACT,CAAC,CAAC;QACF,OAAOO,KAAK;MACd,CAAC,CAAC;IACN;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}